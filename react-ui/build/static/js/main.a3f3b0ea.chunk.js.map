{"version":3,"sources":["config.js","App.js","index.js"],"names":["config","CLIENT_ARRAYS_HOST","process","CLIENT_ARRAYS_PORT","url","ResultsPrinter","props","records","map","record","ListGroup","App","inputRef","useRef","useState","result","setResult","Container","fluid","Row","Col","sm","ref","type","onClick","fetch","method","headers","body","JSON","stringify","number","current","value","then","res","json","catch","e","console","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAKeA,G,MALA,CACXC,mBAAoBC,mIAAYD,oBAAsB,YACtDE,mBAAoBD,mIAAYC,oBAAsB,S,gCCGpDC,EAAG,iBAAaJ,EAAOC,mBAApB,YAA0CD,EAAOG,oBAE1D,SAASE,EAAeC,GACtB,OAAOA,EAAMC,QAAQC,KAAI,SAAAC,GAAM,OAAI,cAACC,EAAA,EAAD,oBAAgBD,MAsCtCE,MAnCf,WACE,IAAMC,EAAWC,mBADJ,EAEeC,mBAAS,MAFxB,mBAENC,EAFM,KAEEC,EAFF,KAeb,OACI,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,gEACA,gCACE,uBAAOC,IAAKV,EAAUW,KAAK,WAC3B,wBAAQC,QAlBP,WACXC,MAAMrB,EAAK,CACTsB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,OAAQnB,EAASoB,QAAQC,UAE/CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAInB,EAAUmB,MACtBE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,OAUlB,qBAEF,cAAC5B,EAAA,EAAD,UACCK,GACG,cAACV,EAAD,CAAgBE,QAASQ,cChCzC0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3f3b0ea.chunk.js","sourcesContent":["const config = {\r\n    CLIENT_ARRAYS_HOST: process.env.CLIENT_ARRAYS_HOST || 'localhost',\r\n    CLIENT_ARRAYS_PORT: process.env.CLIENT_ARRAYS_PORT || '8081'\r\n}\r\n\r\nexport default config\r\n","import './App.css';\nimport { useRef, useState } from 'react';\nimport config from './config'\nimport {Col, Container, ListGroup, Row} from 'react-bootstrap';\n\nconst url = `http://${config.CLIENT_ARRAYS_HOST}:${config.CLIENT_ARRAYS_PORT}`\n\nfunction ResultsPrinter(props){\n  return props.records.map(record => <ListGroup key={record}>record</ListGroup>)\n}\n\nfunction App() {\n  const inputRef = useRef();\n  const [result, setResult] = useState(null)\n\n  const send = () => {\n    fetch(url, {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ number: inputRef.current.value })\n    })\n      .then(res => res.json())\n      .then(res => setResult(res))\n      .catch(e => console.error(e))\n  }\n\n  return (\n      <Container fluid>\n        <Row>\n          <Col sm={2}>\n            <h1>Get inverted array from number</h1>\n            <div>\n              <input ref={inputRef} type=\"number\" />\n              <button onClick={send}>Send</button>\n            </div>\n            <ListGroup>\n            {result && (\n                <ResultsPrinter records={result}/>\n            )}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}